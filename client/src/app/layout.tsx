// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";
// import { GoogleOAuthProvider } from "@react-oauth/google";
// import { Toaster } from "react-hot-toast";
// import { QueryClient, QueryClientProvider} from '@tanstack/react-query'
// import { ReactQueryDevtools } from '@tanstack/react-query-devtools'
// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {

//   const queryClient = new QueryClient()
//   return (
//     <html lang="en">
//       <QueryClientProvider client={queryClient}>

 
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         <GoogleOAuthProvider clientId="572563638497-6jecpue55q0ap6549chh55r1vupv4ngs.apps.googleusercontent.com">
//           {children}
//         </GoogleOAuthProvider>
//         <Toaster />
        
//       </body>
//            <ReactQueryDevtools  />
//            </QueryClientProvider>
//     </html>
//   );
// }

import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Providers } from "./providers";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <Providers>{children}</Providers>
      </body>
    </html>
  );
}
